com/salesforce/marketingcloud/analytics/AnalyticsManager = Com.Salesforce.Marketingcloud.Analytics.IAnalyticsManager
  WAMA_MAX_FIELD_SIZE = WamaMaxFieldSize
  trackCartContents(Lcom/salesforce/marketingcloud/analytics/PiCart;)V = TrackCartContents(Com.Salesforce.Marketingcloud.Analytics.PiCart)
  trackCartConversion(Lcom/salesforce/marketingcloud/analytics/PiOrder;)V = TrackCartConversion(Com.Salesforce.Marketingcloud.Analytics.PiOrder)
  trackInboxOpenEvent(Lcom/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage;)V = TrackInboxOpenEvent(Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageMessage)
  trackPageView(Ljava/lang/String;)V = TrackPageView(string)
  trackPageView(Ljava/lang/String;Ljava/lang/String;)V = TrackPageView(string, string)
  trackPageView(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = TrackPageView(string, string, string)
  trackPageView(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = TrackPageView(string, string, string, string)
com/salesforce/marketingcloud/analytics/PiCart = Com.Salesforce.Marketingcloud.Analytics.PiCart
  <init>()V = .ctor()
  cartItems()Ljava/util/List; = CartItems()
  create(Ljava/util/List;)Lcom/salesforce/marketingcloud/analytics/PiCart; = Create(System.Collections.Generic.IList<Com.Salesforce.Marketingcloud.Analytics.PiCartItem>)
  toJson()Lorg/json/JSONObject; = ToJson()
com/salesforce/marketingcloud/analytics/PiCartItem = Com.Salesforce.Marketingcloud.Analytics.PiCartItem
  <init>()V = .ctor()
  create(Ljava/lang/String;ID)Lcom/salesforce/marketingcloud/analytics/PiCartItem; = Create(string, int, double)
  create(Ljava/lang/String;IDLjava/lang/String;)Lcom/salesforce/marketingcloud/analytics/PiCartItem; = Create(string, int, double, string)
  item()Ljava/lang/String; = Item()
  price()D = Price()
  quantity()I = Quantity()
  toJson()Lorg/json/JSONObject; = ToJson()
  uniqueId()Ljava/lang/String; = UniqueId()
com/salesforce/marketingcloud/analytics/PiOrder = Com.Salesforce.Marketingcloud.Analytics.PiOrder
  <init>()V = .ctor()
  cart()Lcom/salesforce/marketingcloud/analytics/PiCart; = Cart()
  create(Lcom/salesforce/marketingcloud/analytics/PiCart;Ljava/lang/String;DD)Lcom/salesforce/marketingcloud/analytics/PiOrder; = Create(Com.Salesforce.Marketingcloud.Analytics.PiCart, string, double, double)
  discount()D = Discount()
  orderNumber()Ljava/lang/String; = OrderNumber()
  shipping()D = Shipping()
  toJson()Lorg/json/JSONObject; = ToJson()
com/salesforce/marketingcloud/InitializationStatus = Com.Salesforce.Marketingcloud.InitializationStatus
  <init>()V = .ctor()
  isUsable()Z = IsUsable
  encryptionChanged()Z = EncryptionChanged()
  initializedComponents()Ljava/util/List; = InitializedComponents()
  status()Lcom/salesforce/marketingcloud/InitializationStatus$Status; = InvokeStatus()
  locationPlayServicesStatus()I = LocationPlayServicesStatus()
  locationsError()Z = LocationsError()
  locationsMessage()Ljava/lang/String; = LocationsMessage()
  messagingPermissionError()Z = MessagingPermissionError()
  proximityError()Z = ProximityError()
  storageError()Z = StorageError()
  unrecoverableException()Ljava/lang/Throwable; = UnrecoverableException()
com/salesforce/marketingcloud/location/LatLon = Com.Salesforce.Marketingcloud.Location.LatLon
  <init>()V = .ctor()
  a(DD)Lcom/salesforce/marketingcloud/location/LatLon; = A(double, double)
  b(Lorg/json/JSONObject;)Lcom/salesforce/marketingcloud/location/LatLon; = B(Org.Json.JSONObject)
  latitude()D = Latitude()
  longitude()D = Longitude()
com/salesforce/marketingcloud/location/LocationReceiver = Com.Salesforce.Marketingcloud.Location.LocationReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/salesforce/marketingcloud/MarketingCloudConfig = Com.Salesforce.Marketingcloud.MarketingCloudConfig
  <init>()V = .ctor()
  accessToken()Ljava/lang/String; = AccessToken()
  analyticsEnabled()Z = AnalyticsEnabled()
  applicationId()Ljava/lang/String; = ApplicationId()
  applicationLabel()Ljava/lang/String; = ApplicationLabel()
  cloudPageRecipient()Ljava/lang/Class; = CloudPageRecipient()
  cloudPagesEnabled()Z = CloudPagesEnabled()
  gcmSenderId()Ljava/lang/String; = GcmSenderId()
  geofencingEnabled()Z = GeofencingEnabled()
  builder()Lcom/salesforce/marketingcloud/MarketingCloudConfig$Builder; = InvokeBuilder()
  notificationChannelName()Ljava/lang/String; = NotificationChannelName()
  notificationRecipient()Ljava/lang/Class; = NotificationRecipient()
  notificationSmallIconResId()I = NotificationSmallIconResId()
  openDirectRecipient()Ljava/lang/Class; = OpenDirectRecipient()
  piAnalyticsEnabled()Z = PiAnalyticsEnabled()
  proximityEnabled()Z = ProximityEnabled()
  toBuilder()Lcom/salesforce/marketingcloud/MarketingCloudConfig$Builder; = ToBuilder()
com/salesforce/marketingcloud/MarketingCloudSdk = Com.Salesforce.Marketingcloud.MarketingCloudSdk
  getAnalyticsManager()Lcom/salesforce/marketingcloud/analytics/AnalyticsManager; = AnalyticsManager
  getInitializationStatus()Lcom/salesforce/marketingcloud/InitializationStatus; = InitializationStatus
  getInstance()Lcom/salesforce/marketingcloud/MarketingCloudSdk; = Instance
  isInitializing()Z = IsInitializing
  isReady()Z = IsReady
  getLogLevel()I = LogLevel
  setLogLevel(I)V = LogLevel
  getMarketingCloudConfig()Lcom/salesforce/marketingcloud/MarketingCloudConfig; = MarketingCloudConfig
  getSdkState()Lorg/json/JSONObject; = SdkState
  getSdkVersionCode()I = SdkVersionCode
  getSdkVersionName()Ljava/lang/String; = SdkVersionName
  init(Landroid/app/Application;Lcom/salesforce/marketingcloud/MarketingCloudConfig;Lcom/salesforce/marketingcloud/MarketingCloudSdk$InitializationListener;)V = Init(Android.App.Application, Com.Salesforce.Marketingcloud.MarketingCloudConfig, Com.Salesforce.Marketingcloud.MarketingCloudSdk.IInitializationListener)
  requestSdk(Lcom/salesforce/marketingcloud/MarketingCloudSdk$WhenReadyListener;)V = RequestSdk(Com.Salesforce.Marketingcloud.MarketingCloudSdk.IWhenReadyListener)
  requestSdk(Lcom/salesforce/marketingcloud/MarketingCloudSdk$WhenReadyListener;Landroid/os/Looper;)V = RequestSdk(Com.Salesforce.Marketingcloud.MarketingCloudSdk.IWhenReadyListener, Android.OS.Looper)
  setLogListener(Lcom/salesforce/marketingcloud/MCLogListener;)V = SetLogListener(Com.Salesforce.Marketingcloud.IMCLogListener)
com/salesforce/marketingcloud/MCInitContentProvider = Com.Salesforce.Marketingcloud.MCInitContentProvider
  <init>()V = .ctor()
  delete(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I = Delete(Android.Net.Uri, string, string[])
  getType(Landroid/net/Uri;)Ljava/lang/String; = GetType(Android.Net.Uri)
  insert(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri; = Insert(Android.Net.Uri, Android.Content.ContentValues)
  onCreate()Z = OnCreate()
  query(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; = Query(Android.Net.Uri, string[], string, string[], string)
  update(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I = Update(Android.Net.Uri, Android.Content.ContentValues, string, string[])
com/salesforce/marketingcloud/MCKeep = Com.Salesforce.Marketingcloud.IMCKeep
com/salesforce/marketingcloud/MCLogListener = Com.Salesforce.Marketingcloud.IMCLogListener
  DEBUG = Debug
  ERROR = Error
  INFO = Info
  VERBOSE = Verbose
  WARN = Warn
  out(ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = Out(int, string, string, Java.Lang.Throwable)
com/salesforce/marketingcloud/messages/cloudpage/CloudPageListAdapter = Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageListAdapter
  DISPLAY_ALL = DisplayAll
  DISPLAY_READ = DisplayRead
  DISPLAY_UNREAD = DisplayUnread
  getCount()I = Count
  getDisplay()I = Display
  setDisplay(I)V = Display
  deleteMessage(Lcom/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage;)V = DeleteMessage(Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageMessage)
  getItem(I)Ljava/lang/Object; = GetItem(int)
  getItemId(I)J = GetItemId(int)
  onCloudPagesChanged(Ljava/util/List;)V = OnCloudPagesChanged(System.Collections.Generic.IList<Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageMessage>)
  setMessageRead(Lcom/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage;)V = SetMessageRead(Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageMessage)
com/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage = Com.Salesforce.Marketingcloud.Messages.Cloudpage.CloudPageMessage
  <init>()V = .ctor()
  CONTENT_TYPE_CLOUD_PAGE_ONLY = ContentTypeCloudPageOnly
  MESSAGE_TYPE_INBOX_MESSAGE = MessageTypeInboxMessage
  MESSAGE_TYPE_LEGACY_CLOUDPAGE = MessageTypeLegacyCloudpage
  isLegacyMessage()Z = IsLegacyMessage
  getLegacySubject()Ljava/lang/String; = LegacySubject
  alert()Ljava/lang/String; = Alert()
  contentType()I = ContentType()
  create(Lorg/json/JSONObject;)Lcom/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage; = Create(Org.Json.JSONObject)
  custom()Ljava/lang/String; = Custom()
  deleted()Z = Deleted()
  endDateUtc()Ljava/util/Date; = EndDateUtc()
  id()Ljava/lang/String; = Id()
  media()Lcom/salesforce/marketingcloud/messages/cloudpage/CloudPageMessage$Media; = InvokeMedia()
  keys()Ljava/util/List; = Keys()
  messageHash()Ljava/lang/String; = MessageHash()
  messageType()I = MessageType()
  read()Z = Read()
  requestId()Ljava/lang/String; = RequestId()
  setDeleted(Z)V = SetDeleted(bool)
  setRead(Z)V = SetRead(bool)
  sound()Ljava/lang/String; = Sound()
  startDateUtc()Ljava/util/Date; = StartDateUtc()
  subject()Ljava/lang/String; = Subject()
  title()Ljava/lang/String; = Title()
  url()Ljava/lang/String; = Url()
com/salesforce/marketingcloud/messages/geofence/GeofenceMessageResponse = Com.Salesforce.Marketingcloud.Messages.Geofence.GeofenceMessageResponse
  <init>()V = .ctor()
  a(Lcom/salesforce/marketingcloud/location/LatLon;ILjava/util/List;)Lcom/salesforce/marketingcloud/messages/geofence/GeofenceMessageResponse; = A(Com.Salesforce.Marketingcloud.Location.LatLon, int, System.Collections.Generic.IList<Com.Salesforce.Marketingcloud.Messages.Region>)
  fences()Ljava/util/List; = Fences()
com/salesforce/marketingcloud/messages/Message = Com.Salesforce.Marketingcloud.Messages.Message
  <init>()V = .ctor()
  a = A
  b = B
  c = C
  d = D
  e = E
  f = F
  g = G
  h = H
  i = I
  j = J
  k = K
  l = L
  m = M
  n = N
  o = O
  p = P
  q = Q
  r = R
  s = S
  hasEntered()Z = HasEntered
  isRollingPeriod()Z = IsRollingPeriod
  getLastShownDate()Ljava/util/Date; = LastShownDate
  getNextAllowedShow()Ljava/util/Date; = NextAllowedShow
  getNotifyId()I = NotifyId
  getPeriodShowCount()I = PeriodShowCount
  getShowCount()I = ShowCount
  a(I)V = A(int)
  a(Ljava/util/Date;)V = A(Java.Util.Date)
  alert()Ljava/lang/String; = Alert()
  b(I)V = B(int)
  b(Ljava/util/Date;)V = B(Java.Util.Date)
  b(Lorg/json/JSONObject;)Lcom/salesforce/marketingcloud/messages/Message; = B(Org.Json.JSONObject)
  c(I)V = C(int)
  contentType()I = ContentType()
  custom()Ljava/lang/String; = Custom()
  endDateUtc()Ljava/util/Date; = EndDateUtc()
  id()Ljava/lang/String; = Id()
  media()Lcom/salesforce/marketingcloud/messages/Message$Media; = InvokeMedia()
  keys()Ljava/util/List; = Keys()
  messageLimit()I = MessageLimit()
  messagesPerPeriod()I = MessagesPerPeriod()
  messageType()I = MessageType()
  numberOfPeriods()I = NumberOfPeriods()
  openDirect()Ljava/lang/String; = OpenDirect()
  periodType()I = PeriodType()
  proximity()I = Proximity()
  sound()Ljava/lang/String; = Sound()
  startDateUtc()Ljava/util/Date; = StartDateUtc()
  title()Ljava/lang/String; = Title()
  url()Ljava/lang/String; = Url()
com/salesforce/marketingcloud/messages/MessageResponse = Com.Salesforce.Marketingcloud.Messages.MessageResponse
  <init>()V = .ctor()
  refreshCenter()Lcom/salesforce/marketingcloud/location/LatLon; = RefreshCenter()
  refreshRadius()I = RefreshRadius()
com/salesforce/marketingcloud/messages/proximity/ProximityMessageResponse = Com.Salesforce.Marketingcloud.Messages.Proximity.ProximityMessageResponse
  <init>()V = .ctor()
  beacons()Ljava/util/List; = Beacons()
com/salesforce/marketingcloud/messages/Region = Com.Salesforce.Marketingcloud.Messages.Region
  <init>()V = .ctor()
  a = A
  b = B
  a(Z)V = A(bool)
  b()Z = B()
  center()Lcom/salesforce/marketingcloud/location/LatLon; = Center()
  description()Ljava/lang/String; = Description()
  id()Ljava/lang/String; = Id()
  major()I = Major()
  messages()Ljava/util/List; = Messages()
  minor()I = Minor()
  name()Ljava/lang/String; = Name()
  proximityUuid()Ljava/lang/String; = ProximityUuid()
  radius()I = Radius()
  regionType()I = RegionType()
com/salesforce/marketingcloud/notifications/DefaultUrlPresenter = Com.Salesforce.Marketingcloud.Notifications.DefaultUrlPresenter
  <init>()V = .ctor()
  intentForPresenter(Landroid/content/Context;Lcom/salesforce/marketingcloud/notifications/NotificationMessage;)Landroid/content/Intent; = IntentForPresenter(Android.Content.Context, Com.Salesforce.Marketingcloud.Notifications.NotificationMessage)
  onCreate(Landroid/os/Bundle;)V = OnCreate(Android.OS.Bundle)
com/salesforce/marketingcloud/notifications/NotificationMessage = Com.Salesforce.Marketingcloud.Notifications.NotificationMessage
  <init>()V = .ctor()
  a = A
  alert()Ljava/lang/String; = Alert()
  custom()Ljava/lang/String; = Custom()
  customKeys()Ljava/util/Map; = CustomKeys()
  id()Ljava/lang/String; = Id()
  sound()Lcom/salesforce/marketingcloud/notifications/NotificationMessage$Sound; = InvokeSound()
  trigger()Lcom/salesforce/marketingcloud/notifications/NotificationMessage$Trigger; = InvokeTrigger()
  type()Lcom/salesforce/marketingcloud/notifications/NotificationMessage$Type; = InvokeType()
  mediaAltText()Ljava/lang/String; = MediaAltText()
  mediaUrl()Ljava/lang/String; = MediaUrl()
  notificationId()I = NotificationId()
  payload()Landroid/os/Bundle; = Payload()
  pictureUrl()Ljava/lang/String; = PictureUrl()
  regionId()Ljava/lang/String; = RegionId()
  smallIconResId()I = SmallIconResId()
  soundName()Ljava/lang/String; = SoundName()
  subTitle()Ljava/lang/String; = SubTitle()
  title()Ljava/lang/String; = Title()
  url()Ljava/lang/String; = Url()
com/salesforce/marketingcloud/registration/Attribute = Com.Salesforce.Marketingcloud.Registration.Attribute
  <init>()V = .ctor()
  a()Lorg/json/JSONObject; = A()
  a(Lcom/salesforce/marketingcloud/registration/Attribute;)I = A(Com.Salesforce.Marketingcloud.Registration.Attribute)
  a(Ljava/lang/String;Ljava/lang/String;)Lcom/salesforce/marketingcloud/registration/Attribute; = A(string, string)
  key()Ljava/lang/String; = Key()
  value()Ljava/lang/String; = Value()
com/salesforce/marketingcloud/registration/Registration = Com.Salesforce.Marketingcloud.Registration.Registration
  <init>()V = .ctor()
  a(I)V = A(int)
  appId()Ljava/lang/String; = AppId()
  appVersion()Ljava/lang/String; = AppVersion()
  attributes()Ljava/util/List; = Attributes()
  b()Lorg/json/JSONObject; = B()
  contactKey()Ljava/lang/String; = ContactKey()
  deviceId()Ljava/lang/String; = DeviceId()
  dst()Z = Dst()
  e()I = E()
  hwid()Ljava/lang/String; = Hwid()
  locale()Ljava/lang/String; = Locale()
  locationEnabled()Z = LocationEnabled()
  platform()Ljava/lang/String; = Platform()
  platformVersion()Ljava/lang/String; = PlatformVersion()
  pushEnabled()Z = PushEnabled()
  sdkVersion()Ljava/lang/String; = SdkVersion()
  systemToken()Ljava/lang/String; = SystemToken()
  tags()Ljava/util/Set; = Tags()
  timeZone()I = TimeZone()
com/tozny/crypto/android/AesCbcWithIntegrity = Com.Tozny.Crypto.Android.AesCbcWithIntegrity
  <init>()V = .ctor()
  BASE64_FLAGS = Base64Flags
  constantTimeEq([B[B)Z = ConstantTimeEq(byte[], byte[])
  decrypt(Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac;Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;)[B = Decrypt(Com.Tozny.Crypto.Android.AesCbcWithIntegrity.CipherTextIvMac, Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys)
  decryptString(Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac;Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;)Ljava/lang/String; = DecryptString(Com.Tozny.Crypto.Android.AesCbcWithIntegrity.CipherTextIvMac, Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys)
  decryptString(Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac;Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;Ljava/lang/String;)Ljava/lang/String; = DecryptString(Com.Tozny.Crypto.Android.AesCbcWithIntegrity.CipherTextIvMac, Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys, string)
  encrypt([BLcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;)Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac; = Encrypt(byte[], Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys)
  encrypt(Ljava/lang/String;Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;)Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac; = Encrypt(string, Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys)
  encrypt(Ljava/lang/String;Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;Ljava/lang/String;)Lcom/tozny/crypto/android/AesCbcWithIntegrity$CipherTextIvMac; = Encrypt(string, Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys, string)
  generateIv()[B = GenerateIv()
  generateKey()Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys; = GenerateKey()
  generateKeyFromPassword(Ljava/lang/String;[BI)Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys; = GenerateKeyFromPassword(string, byte[], int)
  generateKeyFromPassword(Ljava/lang/String;Ljava/lang/String;I)Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys; = GenerateKeyFromPassword(string, string, int)
  generateMac([BLjavax/crypto/SecretKey;)[B = GenerateMac(byte[], Javax.Crypto.ISecretKey)
  generateSalt()[B = GenerateSalt()
  keys(Ljava/lang/String;)Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys; = Keys(string)
  keyString(Lcom/tozny/crypto/android/AesCbcWithIntegrity$SecretKeys;)Ljava/lang/String; = KeyString(Com.Tozny.Crypto.Android.AesCbcWithIntegrity.SecretKeys)
  saltString([B)Ljava/lang/String; = SaltString(byte[])
